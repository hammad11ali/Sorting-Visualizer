{"version":3,"sources":["SortingAlgorithm/bubbleSort.js","SortingAlgorithm/InsertionSort.js","SortingAlgorithm/SelectionSort.js","SortingAlgorithm/CocktailSort.js","SortingAlgorithm/CombSort.js","SortingAlgorithm/GnomeSort.js","SortingAlgorithm/ShellSort.js","SortingAlgorithm/oddEvenSort.js","SortingVisuallizer/SortingVisuallizer.jsx","SortingVisuallizer/Navbar.js","SortingVisuallizer/Footer.js","SortingVisuallizer/GUI.jsx","App.js","serviceWorker.js","index.js"],"names":["bubbleSort","arr","animation","i","length","j","temp","comparison","push","InsertionSort","nums","tmp","console","log","newAnimation","current","swaps","k","c","animate","SelectionSort","array","len","j_min","selected","CocktailSort","swapped","temp1","CombSort","interval","Math","floor","small","GnomeSort","moveBack","t","shellSort","n","gap","oddEvenSort","isSorted","React","Component","navbar","props","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","handleRandom","placeholder","value","handleAlgorithm","document","getElementById","selectedIndex","Footer","state","custom","setCustom","setState","setArray","isValid","test","values","split","window","alert","innerHTML","handleSetArray","class","htmlFor","min","max","onInput","handleSpeedofArray","handleSize","this","style","display","GUI","Randomarray","arraySize","handleArrayChange","array_bar","getElementsByClassName","childNodes","height","resetArray","size","random","handleResetArray","handleArraySize","aSize","handleSpeed","speed","ANIMATION_SPEED_MS","handleSort","index","selectionSort_animate","shellSort_animate","oddEvenSort_animate","bubbleSort_animate","CocktailSort_animate","CombSort_animate","GnomeSort_animate","InsertionSort_animate","general_Animate","ShellSort","setTimeout","backgroundColor","map","idx","key","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.493896c0.chunk.js","sourcesContent":["let bubbleSort = arr => {\r\n  let animation = [];\r\n  for (var i = arr.length - 1; i > 0; --i) {\r\n    for (var j = 0; j < i; j++) {\r\n      let comparison = [j, j + 1, false];\r\n      if (arr[j] > arr[j + 1]) {\r\n        comparison[2] = true;\r\n        var temp;\r\n        temp = arr[j];\r\n        arr[j] = arr[j + 1];\r\n        arr[j + 1] = temp;\r\n      }\r\n      animation.push(comparison);\r\n    }\r\n  }\r\n  return animation;\r\n};\r\n\r\nexport default bubbleSort;\r\n","let InsertionSort = nums => {\r\n  let animation = [];\r\n  for (let i = 1; i < nums.length; i++) {\r\n    let j = i - 1;\r\n    let tmp = nums[i];\r\n    let comparison = [i, j];\r\n    while (j >= 0 && nums[j] > tmp) {\r\n      nums[j + 1] = nums[j];\r\n      j--;\r\n      console.log(j);\r\n      comparison.push(j);\r\n    }\r\n    nums[j + 1] = tmp;\r\n    animation.push(comparison);\r\n  }\r\n  return animate(animation);\r\n};\r\nfunction animate(animation) {\r\n  let newAnimation = [];\r\n  for (let i = 0; i < animation.length; i++) {\r\n    let current = animation[i];\r\n    if (current.length === 2) {\r\n      let c = current;\r\n      c.push(false);\r\n      newAnimation.push(c);\r\n      continue;\r\n    }\r\n    let swaps = current.length - 2;\r\n    let k = 0;\r\n    while (swaps > 0) {\r\n      let c = [];\r\n      c.push(current[k]);\r\n      c.push(current[k + 1]);\r\n      c.push(true);\r\n      newAnimation.push(c);\r\n      swaps--;\r\n      k++;\r\n    }\r\n    if (current[k + 1] !== -1) {\r\n      let c = [];\r\n      c.push(current[k]);\r\n      c.push(current[k + 1]);\r\n      c.push(false);\r\n      newAnimation.push(c);\r\n    }\r\n  }\r\n  return newAnimation;\r\n}\r\nexport default InsertionSort;\r\n","let SelectionSort = array => {\r\n  let animation = [];\r\n  var len = array.length;\r\n  for (var i = 0; i < len - 1; i = i + 1) {\r\n    var j_min = i;\r\n    let selected = i;\r\n    for (var j = i + 1; j < len; j = j + 1) {\r\n      let comparison = [selected, j, false];\r\n      if (array[j] < array[j_min]) {\r\n        j_min = j;\r\n        selected = j_min;\r\n      }\r\n      animation.push(comparison);\r\n    }\r\n    if (j_min !== i) {\r\n      let comparison = [i, j_min, true];\r\n      var temp;\r\n      temp = array[i];\r\n      array[i] = array[j_min];\r\n      array[j_min] = temp;\r\n      animation.push(comparison);\r\n    }\r\n  }\r\n  return animation;\r\n};\r\nexport default SelectionSort;\r\n","let CocktailSort = arr => {\r\n  let animation = [];\r\n  var swapped;\r\n  var j = 0;\r\n  do {\r\n    for (var i = j; i < arr.length - (2 + j); i++) {\r\n      let comparison = [i, i + 1, false];\r\n      if (arr[i] > arr[i + 1]) {\r\n        comparison[2] = true;\r\n        var temp = arr[i];\r\n        arr[i] = arr[i + 1];\r\n        arr[i + 1] = temp;\r\n        swapped = true;\r\n      }\r\n      animation.push(comparison);\r\n    }\r\n    if (!swapped) {\r\n      break;\r\n    }\r\n    swapped = false;\r\n    for (i = arr.length - (2 + j); i >= j; i--) {\r\n      let comparison = [i, i + 1, false];\r\n      if (arr[i] > arr[i + 1]) {\r\n        comparison[2] = true;\r\n        var temp1 = arr[i];\r\n        arr[i] = arr[i + 1];\r\n        arr[i + 1] = temp1;\r\n        swapped = true;\r\n      }\r\n      animation.push(comparison);\r\n    }\r\n    j++;\r\n  } while (swapped);\r\n  return animation;\r\n};\r\nexport default CocktailSort;\r\n","let CombSort = function(array) {\r\n  var animation = [];\r\n  var interval = Math.floor(array.length / 1.3);\r\n  while (interval > 0) {\r\n    for (var i = 0; i + interval < array.length; i += 1) {\r\n      var comparison = [i, i + interval, false];\r\n      if (array[i] > array[i + interval]) {\r\n        comparison[2] = true;\r\n        var small = array[i + interval];\r\n        array[i + interval] = array[i];\r\n        array[i] = small;\r\n      }\r\n      animation.push(comparison);\r\n    }\r\n    interval = Math.floor(interval / 1.3);\r\n  }\r\n  return animation;\r\n};\r\nexport default CombSort;\r\n","let GnomeSort = arr => {\r\n  let animation = [];\r\n  function moveBack(i) {\r\n    for (; i > 0 && arr[i - 1] > arr[i]; i--) {\r\n      let comparison = [i, i - 1, true];\r\n      var t = arr[i];\r\n      arr[i] = arr[i - 1];\r\n      arr[i - 1] = t;\r\n      animation.push(comparison);\r\n    }\r\n    if (i > 0) {\r\n      let comparison = [i, i - 1, false];\r\n      animation.push(comparison);\r\n    }\r\n  }\r\n  for (var i = 1; i < arr.length; i++) {\r\n    if (arr[i - 1] > arr[i]) {\r\n      moveBack(i);\r\n    } else {\r\n      let comparison = [i, i - 1, false];\r\n      animation.push(comparison);\r\n    }\r\n  }\r\n  return animation;\r\n};\r\nexport default GnomeSort;\r\n","let shellSort = arr => {\r\n    let animation = [];\r\n    var n = arr.length;\r\n    var temp;\r\n    for (var gap = Math.floor(n / 2); gap > 0; gap = Math.floor(gap / 2)) {\r\n        for (var j = gap; j < n; j++) {\r\n            for (var i = j - gap; i >= 0; i = i - gap) {\r\n                var x = i + gap;\r\n                let comparison = [x, i, false];\r\n                if (arr[i + gap] >= arr[i]) {\r\n                    animation.push(comparison)\r\n                    break;\r\n                }\r\n                else {\r\n                    temp = arr[i + gap];\r\n                    arr[i + gap] = arr[i];\r\n                    arr[i] = temp;\r\n                    comparison[2] = true;\r\n                    animation.push(comparison)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    console.log(arr)\r\n    return animation;\r\n};\r\n\r\nexport default shellSort;\r\n","let oddEvenSort = arr => {\r\n    var isSorted = false; // Initially array is unsorted\r\n    var n = arr.length;\r\n    let animation = [];\r\n    var i, temp;\r\n\r\n    while (!isSorted) {\r\n        isSorted = true;\r\n\r\n        // Perform Bubble sort on odd indexed element \r\n        for (i = 1; i <= n - 2; i = i + 2) {\r\n            let comparison = [i, i + 1, false];\r\n            if (arr[i] > arr[i + 1]) {\r\n                temp = arr[i];\r\n                arr[i] = arr[i + 1];\r\n                arr[i + 1] = temp;\r\n                //swap(arr[i], arr[i + 1]);\r\n                isSorted = false;\r\n                comparison[2] = true;\r\n            }\r\n            animation.push(comparison)\r\n        }\r\n\r\n        // Perform Bubble sort on even indexed element \r\n        for (i = 0; i <= n - 2; i = i + 2) {\r\n            let comparison = [i, i + 1, false];\r\n            if (arr[i] > arr[i + 1]) {\r\n                temp = arr[i];\r\n                arr[i] = arr[i + 1];\r\n                arr[i + 1] = temp;\r\n                isSorted = false;\r\n                comparison[2] = true;\r\n            }\r\n            animation.push(comparison)\r\n        }\r\n    }\r\n    console.log(arr)\r\n    return animation;\r\n};\r\n\r\nexport default oddEvenSort;","import React from \"react\";\r\nimport \"./SortingVisuallizer.css\";\r\nimport bubbleSort from \"../SortingAlgorithm/bubbleSort.js\";\r\nimport InsertionSort from \"../SortingAlgorithm/InsertionSort.js\";\r\nimport SelectionSort from \"../SortingAlgorithm/SelectionSort.js\";\r\nimport CocktailSort from \"../SortingAlgorithm/CocktailSort.js\";\r\nimport CombSort from \"../SortingAlgorithm/CombSort.js\";\r\nimport GnomeSort from \"../SortingAlgorithm/GnomeSort.js\";\r\nimport ShellSort from \"../SortingAlgorithm/ShellSort.js\";\r\nimport oddEvenSort from \"../SortingAlgorithm/oddEvenSort.js\";\r\nconst ANIMATION_SPEED_MS = 500;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = \"turquoise\";\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = \"red\";\r\n\r\n//\r\nconst TERTIARY_COLOR = \"green\";\r\n\r\nexport default class SortingVisuallizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Randomarray: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n  resetArray() {\r\n    const array = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      array.push(randomIntFromInterval(5, 25));\r\n    }\r\n    this.setState({\r\n      Randomarray: array\r\n    });\r\n  }\r\n\r\n  quickSort() {\r\n    // We leave it as an exercise to the viewer of this code to implement this method.\r\n  }\r\n\r\n  heapSort() {\r\n    // We leave it as an exercise to the viewer of this code to implement this method.\r\n  }\r\n  general_Animate(animation) {\r\n    var j = 1;\r\n    let array_bar = document.getElementsByClassName(\"array-bar\");\r\n    for (var i = 0; i < animation.length; i++) {\r\n      let current = animation[i];\r\n      setTimeout(() => {\r\n        array_bar[current[0]].style.backgroundColor = SECONDARY_COLOR;\r\n        array_bar[current[1]].style.backgroundColor = SECONDARY_COLOR;\r\n      }, ANIMATION_SPEED_MS * j);\r\n      j++;\r\n      if (current[2]) {\r\n        setTimeout(() => {\r\n          array_bar[current[0]].style.backgroundColor = TERTIARY_COLOR;\r\n          array_bar[current[1]].style.backgroundColor = TERTIARY_COLOR;\r\n        }, ANIMATION_SPEED_MS * j);\r\n        j++;\r\n        setTimeout(() => {\r\n          let temp = array_bar[current[0]].innerHTML;\r\n          array_bar[current[0]].innerHTML = array_bar[current[1]].innerHTML;\r\n          array_bar[current[1]].innerHTML = temp;\r\n          array_bar[current[0]].style.height = `${array_bar[current[0]]\r\n            .childNodes[0].innerHTML * 20}px`;\r\n          array_bar[current[1]].style.height = `${array_bar[current[1]]\r\n            .childNodes[0].innerHTML * 20}px`;\r\n          array_bar[current[0]].style.backgroundColor = PRIMARY_COLOR;\r\n          array_bar[current[1]].style.backgroundColor = PRIMARY_COLOR;\r\n        }, ANIMATION_SPEED_MS * j);\r\n        j++;\r\n      } else\r\n        setTimeout(() => {\r\n          array_bar[current[0]].style.backgroundColor = PRIMARY_COLOR;\r\n          array_bar[current[1]].style.backgroundColor = PRIMARY_COLOR;\r\n        }, ANIMATION_SPEED_MS * j);\r\n      j++;\r\n    }\r\n  }\r\n  bubbleSort_animate = () => {\r\n    let animation = bubbleSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  InsertionSort_animate = () => {\r\n    let animation = InsertionSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  shellSort_animate = () => {\r\n    console.log(\"shell\");\r\n    let animation = ShellSort(this.state.Randomarray);\r\n    console.log(animation);\r\n    this.general_Animate(animation);\r\n  };\r\n  oddEvenSort_animate = () => {\r\n    let animation = oddEvenSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  selectionSort = () => {\r\n    let animation = SelectionSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  CocktailSort_animate = () => {\r\n    let animation = CocktailSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  CombSort_animate = () => {\r\n    let animation = CombSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  GnomeSort_animate = () => {\r\n    let animation = GnomeSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"array-container\">\r\n        {this.state.Randomarray.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{ height: `${value * 20}px` }}\r\n          >\r\n            <p>{value}</p>\r\n          </div>\r\n        ))}\r\n        <button onClick={() => this.resetArray()}>Generate New Array</button>\r\n        <button onClick={() => this.mergeSort()}>Merge Sort</button>\r\n        <button onClick={() => this.quickSort()}>Quick Sort</button>\r\n        <button onClick={() => this.heapSort()}>Heap Sort</button>\r\n        <button onClick={() => this.selectionSort()}>Selection Sort</button>\r\n        <button onClick={() => this.shellSort_animate()}>Shell Sort</button>\r\n        <button onClick={() => this.oddEvenSort_animate()}>\r\n          Odd-Even Sort\r\n        </button>\r\n        <button onClick={() => this.bubbleSort_animate()}>Bubble Sort</button>\r\n        <button onClick={() => this.CocktailSort_animate()}>\r\n          CocktailSort\r\n        </button>\r\n        <button onClick={() => this.CombSort_animate()}>Comb Sort</button>\r\n        <button onClick={() => this.GnomeSort_animate()}>Gnome Sort</button>\r\n        <button onClick={() => this.InsertionSort_animate()}>\r\n          Insertion Sort\r\n        </button>\r\n        <button onClick={() => this.testSortingAlgorithms()}>\r\n          Test Sorting Algorithms (BROKEN)\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst navbar = props => (\r\n  <header>\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n      <a className=\"navbar-brand\">Sorting Visualizer</a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n          <li>\r\n            <button type=\"button\" onClick={props.handleRandom} className=\"btn\">\r\n              Random Array\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <select\r\n              id=\"inputState\"\r\n              className=\"form-control\"\r\n              placeholder=\"choose\"\r\n            >\r\n              <option value=\"0\">Selection Sort</option>\r\n              <option value=\"1\">Shell Sort</option>\r\n              <option value=\"2\">Odd-Even Sort</option>\r\n              <option value=\"3\">Bubble Sort</option>\r\n              <option value=\"4\">Cocktail Sort</option>\r\n              <option value=\"5\">Comb Sort</option>\r\n              <option value=\"6\">Gnome Sort</option>\r\n              <option value=\"7\">Insertion Sort</option>\r\n              <option value=\"8\">Merge Sort</option>\r\n            </select>\r\n          </li>\r\n          <li>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() =>\r\n                props.handleAlgorithm(\r\n                  document.getElementById(\"inputState\").selectedIndex\r\n                )\r\n              }\r\n              className=\"btn\"\r\n            >\r\n              Sort\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n  state = { custom: \"none\" };\r\n  setCustom = () => {\r\n    this.setState({\r\n      custom: \"\"\r\n    });\r\n  };\r\n  setArray = () => {\r\n    let arr = [];\r\n    let value = document.getElementById(\"inputArray\").value;\r\n    var isValid = /^[0-9,]*$/.test(value);\r\n    if (isValid) {\r\n      let values = value.split(\",\");\r\n      for (let i = 0; i < values.length; i++) {\r\n        if (values[i] > 0 && values[i] < 26) {\r\n          arr.push(values[i]);\r\n        } else {\r\n          isValid = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!isValid || arr.length < 3) {\r\n      window.alert(\"Invalid Input\");\r\n      return;\r\n    }\r\n    document.getElementById(\"inputArray\").innerHTML = \"\";\r\n    this.setState({\r\n      custom: \"none\"\r\n    });\r\n    this.props.handleSetArray(arr);\r\n  };\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <nav class=\"navbar fixed-bottom navbar-light navbar-dark\">\r\n          <div>\r\n            <label htmlFor=\"customRange1\" id=\"label1\">\r\n              Speed\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"range\"\r\n              className=\"Speed custom-range\"\r\n              id=\"Speed\"\r\n              min=\"500\"\r\n              max=\"1500\"\r\n              onInput={() =>\r\n                this.props.handleSpeedofArray(\r\n                  document.getElementById(\"Speed\").value\r\n                )\r\n              }\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"customRange1\" id=\"label1\">\r\n              Array Size\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"range\"\r\n              className=\"custom-range\"\r\n              id=\"custom-range\"\r\n              min=\"3\"\r\n              max=\"10\"\r\n              onInput={() =>\r\n                this.props.handleSize(\r\n                  document.getElementById(\"custom-range\").value\r\n                )\r\n              }\r\n            ></input>\r\n          </div>\r\n          <button onClick={this.setCustom} id=\"btn1\" className=\"btn\">\r\n            Custom\r\n          </button>\r\n          <div\r\n            id=\"a\"\r\n            style={{ display: this.state.custom }}\r\n            className=\"form-group\"\r\n          >\r\n            <input className=\"form-control\" id=\"inputArray\" type=\"text\" />\r\n            <button id=\"btn2\" onClick={this.setArray} className=\"btn m-2\">\r\n              OK\r\n            </button>\r\n          </div>\r\n        </nav>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport \"./SortingVisuallizer.css\";\r\nimport bubbleSort from \"../SortingAlgorithm/bubbleSort.js\";\r\nimport InsertionSort from \"../SortingAlgorithm/InsertionSort.js\";\r\nimport SelectionSort from \"../SortingAlgorithm/SelectionSort.js\";\r\nimport CocktailSort from \"../SortingAlgorithm/CocktailSort.js\";\r\nimport CombSort from \"../SortingAlgorithm/CombSort.js\";\r\nimport GnomeSort from \"../SortingAlgorithm/GnomeSort.js\";\r\nimport ShellSort from \"../SortingAlgorithm/ShellSort.js\";\r\nimport oddEvenSort from \"../SortingAlgorithm/oddEvenSort.js\";\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = \"turquoise\";\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = \"red\";\r\n\r\n//\r\nconst TERTIARY_COLOR = \"green\";\r\n\r\nclass GUI extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arraySize: 10,\r\n      Randomarray: [],\r\n      ANIMATION_SPEED_MS: 500\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.resetArray(this.state.arraySize);\r\n    this.handleArraySize(this.state.arraySize);\r\n  }\r\n  setArray = arr => {\r\n    this.setState(\r\n      {\r\n        Randomarray: arr,\r\n        arraySize: arr.length\r\n      },\r\n      this.handleArrayChange\r\n    );\r\n  };\r\n  handleArrayChange = () => {\r\n    let array_bar = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < this.state.Randomarray.length; i++) {\r\n      array_bar[i].childNodes[0].innerHTML = this.state.Randomarray[i];\r\n      array_bar[i].style.height = `${this.state.Randomarray[i] * 20}px`;\r\n    }\r\n    document.getElementById(\"custom-range\").value = this.arraySize - 3;\r\n  };\r\n  resetArray = size => {\r\n    const array = [];\r\n    for (let i = 0; i < size; i++) {\r\n      array.push(randomIntFromInterval(5, 25));\r\n    }\r\n    this.setState({\r\n      Randomarray: array\r\n    });\r\n  };\r\n  handleResetArray = () => {\r\n    this.resetArray(this.state.arraySize);\r\n  };\r\n  handleArraySize = aSize => {\r\n    this.setState(\r\n      {\r\n        arraySize: aSize\r\n      },\r\n      this.resetArray(aSize)\r\n    );\r\n  };\r\n  handleSpeed = speed => {\r\n    this.setState({\r\n      ANIMATION_SPEED_MS: speed\r\n    });\r\n  };\r\n  handleSort = index => {\r\n    switch (index) {\r\n\r\n      case 0:\r\n        //selection Sort\r\n        this.selectionSort_animate();\r\n        break;\r\n      case 1:\r\n        //shell Sort\r\n        this.shellSort_animate();\r\n        break;\r\n      case 2:\r\n        //odd-even Sort\r\n        this.oddEvenSort_animate();\r\n        break;\r\n      case 3:\r\n        //bubble Sort\r\n        this.bubbleSort_animate();\r\n        break;\r\n      case 4:\r\n        //Cocktail Sort\r\n        this.CocktailSort_animate();\r\n        break;\r\n      case 5:\r\n        //comb Sort\r\n        this.CombSort_animate();\r\n        break;\r\n      case 6:\r\n        //gnome Sort\r\n        this.GnomeSort_animate();\r\n        break;\r\n      case 7:\r\n        //insertion Sort\r\n        this.InsertionSort_animate();\r\n        break;\r\n      case 8:\r\n        //merge Sort\r\n        window.alert(\"Not Implemented\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // case switch to call required sort\r\n  };\r\n  quickSort() {\r\n    // We leave it as an exercise to the viewer of this code to implement this method.\r\n  }\r\n\r\n  heapSort() {\r\n    // We leave it as an exercise to the viewer of this code to implement this method.\r\n  }\r\n  general_Animate(animation) {\r\n    var j = 1;\r\n    let array_bar = document.getElementsByClassName(\"array-bar\");\r\n    for (var i = 0; i < animation.length; i++) {\r\n      let current = animation[i];\r\n      setTimeout(() => {\r\n        array_bar[current[0]].style.backgroundColor = SECONDARY_COLOR;\r\n        array_bar[current[1]].style.backgroundColor = SECONDARY_COLOR;\r\n      }, this.state.ANIMATION_SPEED_MS * j);\r\n      j++;\r\n      if (current[2]) {\r\n        setTimeout(() => {\r\n          array_bar[current[0]].style.backgroundColor = TERTIARY_COLOR;\r\n          array_bar[current[1]].style.backgroundColor = TERTIARY_COLOR;\r\n        }, this.state.ANIMATION_SPEED_MS * j);\r\n        j++;\r\n        setTimeout(() => {\r\n          let temp = array_bar[current[0]].innerHTML;\r\n          array_bar[current[0]].innerHTML = array_bar[current[1]].innerHTML;\r\n          array_bar[current[1]].innerHTML = temp;\r\n          array_bar[current[0]].style.height = `${array_bar[current[0]]\r\n            .childNodes[0].innerHTML * 20}px`;\r\n          array_bar[current[1]].style.height = `${array_bar[current[1]]\r\n            .childNodes[0].innerHTML * 20}px`;\r\n          array_bar[current[0]].style.backgroundColor = PRIMARY_COLOR;\r\n          array_bar[current[1]].style.backgroundColor = PRIMARY_COLOR;\r\n        }, this.state.ANIMATION_SPEED_MS * j);\r\n        j++;\r\n      } else\r\n        setTimeout(() => {\r\n          array_bar[current[0]].style.backgroundColor = PRIMARY_COLOR;\r\n          array_bar[current[1]].style.backgroundColor = PRIMARY_COLOR;\r\n        }, this.state.ANIMATION_SPEED_MS * j);\r\n      j++;\r\n    }\r\n    setTimeout(() => {\r\n      window.alert(\"Complete\");\r\n    }, this.state.ANIMATION_SPEED_MS * j);\r\n  }\r\n  bubbleSort_animate = () => {\r\n    let animation = bubbleSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  InsertionSort_animate = () => {\r\n    let animation = InsertionSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  shellSort_animate = () => {\r\n    console.log(\"shell\");\r\n    let animation = ShellSort(this.state.Randomarray);\r\n    console.log(animation);\r\n    this.general_Animate(animation);\r\n  };\r\n  oddEvenSort_animate = () => {\r\n    let animation = oddEvenSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  selectionSort_animate = () => {\r\n    let animation = SelectionSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  CocktailSort_animate = () => {\r\n    let animation = CocktailSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  CombSort_animate = () => {\r\n    let animation = CombSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n  GnomeSort_animate = () => {\r\n    let animation = GnomeSort(this.state.Randomarray);\r\n    this.general_Animate(animation);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"GUI\">\r\n        <div>\r\n          <Navbar\r\n            handleAlgorithm={this.handleSort}\r\n            handleRandom={this.handleResetArray}\r\n          />\r\n        </div>\r\n        <div className=\"array-container\">\r\n          {this.state.Randomarray.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{ height: `${value * 20}px` }}\r\n            >\r\n              <p>{value}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <Footer\r\n            handleSetArray={this.setArray}\r\n            handleSize={this.handleArraySize}\r\n            handleSpeedofArray={this.handleSpeed}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GUI;\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import React from \"react\";\r\nimport SortingVisuallizer from \"./SortingVisuallizer/SortingVisuallizer\";\r\nimport GUI from \"./SortingVisuallizer/GUI\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <GUI></GUI>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}